1. 平均哈希 (Average Hash, ahash)
原理：计算图像的平均像素值，然后将每个像素值与平均值进行比较，生成一个二进制哈希值。

特点：计算速度快，对图像的细微变化比较敏感，但对图像的旋转和缩放不太敏感。

2. 感知哈希 (Perceptual Hash, phash)
原理：计算图像的离散余弦变换（DCT），并使用DCT系数的均值生成哈希值。

特点：对图像的细微变化不太敏感，但对图像的旋转和缩放比较敏感。适用于需要一定鲁棒性的场景。

3. 差异哈希 (Difference Hash, dhash)
原理：比较相邻像素的差异生成哈希值。

特点：对图像的细微变化比较敏感，但对图像的旋转和缩放不太敏感。适用于需要快速计算且对细微变化敏感的场景。

4. Haar小波哈希 (Wavelet Hash, whash-haar)
原理：计算图像的Haar小波变换，并使用小波系数的均值生成哈希值。

特点：对图像的细微变化不太敏感，但对图像的旋转和缩放比较敏感。适用于需要一定鲁棒性的场景。

5. Daubechies小波哈希 (Wavelet Hash, whash-db4)
原理：计算图像的Daubechies小波变换（使用db4小波基），并使用小波系数的均值生成哈希值。

特点：对图像的细微变化不太敏感，但对图像的旋转和缩放比较敏感。适用于需要一定鲁棒性的场景。

6. HSV颜色哈希 (Color Hash, colorhash)
原理：计算图像的HSV颜色空间的直方图，并生成哈希值。

特点：对图像的颜色变化比较敏感，但对图像的结构变化不太敏感。适用于需要颜色特征的场景。

7. 抗裁剪哈希 (Crop-Resistant Hash, crop-resistant)
原理：通过检测图像中的多个区域并生成哈希值，以抵抗图像的裁剪和部分遮挡。

特点：对图像的裁剪和部分遮挡具有较好的鲁棒性，但对图像的细微变化比较敏感。适用于需要抵抗裁剪的场景。

总结
速度：ahash 和 dhash 计算速度较快，而 phash 和 whash 计算速度较慢。

鲁棒性：phash、whash、colorhash 和 crop-resistant 对图像的旋转、缩放和颜色变化具有较好的鲁棒性。

敏感性：ahash 和 dhash 对图像的细微变化比较敏感，而 phash 和 whash 对细微变化不太敏感。